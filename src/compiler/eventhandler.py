#Copyright (C) 2011  Gabriel Gregori Manzano
#
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

import logging
from assemblycodegenerator import AssemblyCodeGenerator

class EventHandler():
    """Contains all the handlers of the XML events generated by the parser."""
    
    def __init__(self):
        self.logger = logging.getLogger('compiler')
        
        #In the future we could easily change it, e.g to a binary generator. 
        self.codeGen = AssemblyCodeGenerator()
    
    def handle_default_start(self, event):
        self.logger.debug("Called unimplemented start handler for '{}' with attributes: {}".format(event.name, event.attrs))
        
    def handle_default_end(self, event):
        self.logger.debug("Called unimplemented end handler for '{}'".format(event.name))